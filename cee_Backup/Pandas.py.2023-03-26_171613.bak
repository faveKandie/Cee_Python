import pandas
import csv
import random

dict = {
    "name": ["mirabel", "dehle", "ola", "david", "donald"]
    }

# date = pandas.DataFrame(dict)#reading from dictionary
# date.to_csv("newfile.csv") #converting dictionary to csv file

date = pandas.DataFrame(dict)    
grade = []
def added(adder, grading):
    global date
    for n in range(0, 5):
        food = random.randint(80, 100)
        adder.append(food)
    dict[f"{grading}"] = adder
    date = pandas.DataFrame(dict)
    date.to_csv("new_filee.csv")
    print(date)

added(grade, "grade")
print(grade)
print(dict)

rate = pandas.read_csv("new_filee.csv")#reading from csv file 
rand = rate.to_dict() #converting csv file to dictionary

print(rand)

name = date["name"] #to hold a column in the .scv file
print(f"\n{name}")

col_name = date[date.name == "cee"] #to hold a row in the csv file
print(f"\n{col_name}")
print(date)

grader = date["grade"]
max_grade = grader.max() #to print maximum number in a row
print(max_grade)
print(date["grade"].max()) #to print maximum number in a row

listgrade = grader.to_list() #taking a column into a list
print(listgrade)

sand = 0
for n in listgrade: #finding the average using for loop from list
    rane = n
    sand += rane
print(sand)
total = len(listgrade)
average = sand/total

print(average)
print(date["grade"].mean()) #finding average using mean() function

score = []

print(score)

def grading(scorer, grades):
    for n in grades:
        if n >= 70:
            scores = "A"
            scorer.append(scores)
        elif n >= 60 and n <= 69:
            scores = "B"
            scorer.append(scores)
        elif n >= 50 and n <= 59:
            scores = "C"
            scorer.append(scores)
        elif n >= 45 and n <= 49:
            scores = "D"
            scorer.append(scores)
        elif n >= 40 and n <= 44:
            scores = "E"
            scorer.append(scores)
        else:
            scores = "F"
            scorer.append(scores)
    
def gp(scorer, grades):
    for n in grades:
        if n >= 4.5 :
            scores = "First Class"
            scorer.append(scores)
        elif n >= 3.5 and n <= 4.49:
            scores = "Second Class Upper"
            scorer.append(scores)
        elif n >= 2.0 and n <= 3.49:
            scores = "Second Class Lower"
            scorer.append(scores)
        elif n >= 0 and n <= 1.99:
            scores = "Third Class"
            scorer.append(scores)
    
grading(score, grade)
#to add a column to a csv file, create  list, add to dictionary, assess the dictionary as a csv file    
def proc():
    date = pandas.DataFrame(dict)
    date.to_csv("new_filee.csv")
    print(f"\n{date}")

dict["score"] = score #adding a list to a dictionary
proc()

score1 = []
grade1 = []
added(grade1, "grade1")

print(grade1)
grading(score1, grade1)
dict["score1"] = score1 
proc()

score2 = []
grade2 = []
added(grade2, "grade2")

print(grade2)
grading(score2, grade2)
dict["score2"] = score2 
proc()

score3 = []
grade3 = []
added(grade3, "grade3")

print(grade3)
grading(score3, grade3)
dict["score3"] = score3 
proc()

radio = date["grade"].to_list()
radi = date["grade1"].to_list()
rado = date["grade2"].to_list()
radow = date["grade3"].to_list()

totally = []
gradey = []
for n in range(0, 5):
    rad = radio[n]
    sad = radi[n]
    nad = rado[n]
    mad = radow[n]
    total = (rad + sad + nad + mad) / 80
    tot = round(total, 2)
    totally.append(tot)
    
print(totally)
dict["GP"] = totally
gp(gradey, totally)
print(gradey)
dict["RealGrade"] = gradey
print(dict)
proc()